C51 COMPILER V9.57.0.0   TM1620                                                            07/06/2024 17:17:32 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE TM1620
OBJECT MODULE PLACED IN .\Obj\TM1620.obj
COMPILER INVOKED BY: D:\Keil Arm\C51\BIN\C51.EXE App\TM1620.c LARGE OPTIMIZE(1,SPEED) BROWSE INCDIR(.\App;.\User) DEBUG 
                    -OBJECTEXTEND PRINT(.\Obj\TM1620.lst) OBJECT(.\Obj\TM1620.obj)

line level    source

   1          #include "main.h"
   2          
   3          #define STB P26
   4          #define CLK P25
   5          #define DIN P24
   6          
   7          #define GPIR1 Disp_SFR_Addr_00H
   8          #define GPIR2 Disp_SFR_Addr_02H
   9          
  10          uint8_t code num[10] = {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};  //数码管译码 0 - 9
  11          
  12          
  13          static void Init(void);                                                                                                         //初始化
  14          static void Disp_Number(uint8_t ,uint8_t );                             //设置数字
  15          static void Delay_Bright_ADJ(uint8_t );         //亮度调节和延时
  16          
  17          static void TM1620_Write_Byte(uint8_t);    //TM1620写入字节
  18          static void Display_TwoNum(uint8_t );//显示两位数字
  19          
  20          
  21          //结构体
  22          TM1620_t xdata TM1620=
  23          {
  24                  Brightness_level_3,
  25                  Init,
  26                  Disp_Number,
  27                  Delay_Bright_ADJ
  28          };
  29          
  30          
  31          
  32          /*
  33            *  @name   TM1620_Write_Byte
  34            *  @brief  写一个字节
  35            *  @param  dat:一个字节数据
  36            *  @retval None
  37          */
  38          static void TM1620_Write_Byte(uint8_t dat)
  39          {
  40   1              uint8_t TM1620_i=0;
  41   1              STB=0;          //STB下降沿进入数据接收模式
  42   1              Public.Delayms(1);
  43   1              for(TM1620_i=0;TM1620_i<8;TM1620_i++)
  44   1              {
  45   2                      //CLK下降沿时准备数据
  46   2                      CLK=0;
  47   2                      if((dat&bit0)==bit0)
  48   2                              DIN=1;
  49   2                      else
  50   2                              DIN=0;
  51   2                      dat=dat>>1;//右移到下一位
  52   2                      _nop_();
  53   2      
  54   2                      //CLK上升沿读取数据
C51 COMPILER V9.57.0.0   TM1620                                                            07/06/2024 17:17:32 PAGE 2   

  55   2                      CLK=1;
  56   2                      _nop_();
  57   2              }
  58   1      }
  59          
  60          
  61          /*
  62            *  @name   Init
  63            *  @brief  初始化TM1620
  64            *  @param  None
  65            *  @retval None
  66          */
  67          static void Init()
  68          {
  69   1              uint8_t init_i=0;
  70   1              //设置显示模式
  71   1              TM1620_Write_Byte(Disp_Mode_GRID6_SEG8);
  72   1              STB=1;
  73   1              
  74   1              //设置写显存的数据命令，自动加一
  75   1              TM1620_Write_Byte(Write_Data_Addr_Auto_Add);
  76   1              STB=1;
  77   1              
  78   1              //数据清零
  79   1              TM1620_Write_Byte(Disp_SFR_Addr_00H);
  80   1              for(init_i=0;init_i<Disp_SFR_Addr_Num;init_i++)
  81   1                      TM1620_Write_Byte(0x00);
  82   1              STB=1;
  83   1              
  84   1              //设置辉度
  85   1              TM1620_Write_Byte(TM1620.Brightness);
  86   1              STB=1;
  87   1              
  88   1              
  89   1              //设置显示模式
  90   1              TM1620_Write_Byte(Disp_Mode_GRID6_SEG8);
  91   1              STB=1;
  92   1              
  93   1              //设置写显存的数据命令，固定地址
  94   1              TM1620_Write_Byte(Write_Data_Addr_Fix);
  95   1              STB=1;
  96   1              
  97   1              //写显示寄存器
  98   1              TM1620_Write_Byte(GPIR1);
  99   1              TM1620_Write_Byte(0xFF);
 100   1              STB=1;
 101   1              
 102   1              TM1620_Write_Byte(GPIR2);
 103   1              TM1620_Write_Byte(0xFF);
 104   1              STB=1;
 105   1              
 106   1              //设置辉度
 107   1              TM1620_Write_Byte(TM1620.Brightness);
 108   1              STB=1;
 109   1      }
 110          
 111          
 112          /*
 113            *  @name   Disp_Number
 114            *  @brief  显示单个数字
 115            *  @param  GPIR:位,1十位，2个位
 116                                   Num：显示数字
C51 COMPILER V9.57.0.0   TM1620                                                            07/06/2024 17:17:32 PAGE 3   

 117            *  @retval None
 118          */
 119          static void Disp_Number(uint8_t GPIR,uint8_t Num)
 120          {
 121   1              //指定寄存器
 122   1              switch(GPIR)
 123   1              {
 124   2                      case 1:
 125   2                              TM1620_Write_Byte(GPIR1);
 126   2                              break;
 127   2                      case 2:
 128   2                              TM1620_Write_Byte(GPIR2);
 129   2                              break;  
 130   2              }
 131   1              //设置数据
 132   1              TM1620_Write_Byte(num[Num]);
 133   1              STB=1;
 134   1              
 135   1              //设置辉度
 136   1              TM1620_Write_Byte(TM1620.Brightness);
 137   1              STB=1;
 138   1      }
 139          
 140          
 141          /*
 142            *  @name   Delay_Bright_ADJ
 143            *  @brief  延时调整亮度
 144            *  @param  ms：延时时间
 145            *  @retval None
 146          */
 147          static void Delay_Bright_ADJ(uint8_t ms)
 148          {
 149   1              uint8_t k=0;
 150   1              
 151   1              for(k=0;k<ms;k++)
 152   1              {
 153   2                      Key1.KEY_Detect();
 154   2                      if(Key1.Press==true)
 155   2                      {
 156   3                              TM1620.Brightness=Brightness_level_0;
 157   3                              break;
 158   3                      }
 159   2                      else if(Key1.Click==true && Key1.Press==false)
 160   2                      {
 161   3                              switch(TM1620.Brightness)
 162   3                              {
 163   4                                      case Brightness_level_0: TM1620.Brightness=Brightness_level_1;break;
 164   4                                      case Brightness_level_1: TM1620.Brightness=Brightness_level_2;break;
 165   4                                      case Brightness_level_2: TM1620.Brightness=Brightness_level_3;break;
 166   4                                      case Brightness_level_3: TM1620.Brightness=Brightness_level_4;break;
 167   4                                      case Brightness_level_4: TM1620.Brightness=Brightness_level_5;break;
 168   4                                      case Brightness_level_5: TM1620.Brightness=Brightness_level_6;break;
 169   4                                      case Brightness_level_6: TM1620.Brightness=Brightness_level_7;break;
 170   4                                      case Brightness_level_7: TM1620.Brightness=Brightness_level_8;break;
 171   4                                      case Brightness_level_8: TM1620.Brightness=Brightness_level_1;break;
 172   4                              }
 173   3                              break;
 174   3                      }
 175   2                      Public.Delayms(1);
 176   2              }
 177   1      }
 178          
C51 COMPILER V9.57.0.0   TM1620                                                            07/06/2024 17:17:32 PAGE 4   

 179          
 180          
 181          /*
 182            *  @name   Display_TwoNum
 183            *  @brief  显示两位数据
 184            *  @param  Data：两位整数
 185            *  @retval None
 186          */
 187          /*--------------未开放函数-------------------------
 188          static void Display_TwoNum(uint8_t Data)
 189          {
 190                  TM1620.Disp_Number(1,(uint8_t)Data/10);
 191                  TM1620.Disp_Number(2,(uint8_t)Data%10); 
 192          }
 193          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    493    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =     17    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
