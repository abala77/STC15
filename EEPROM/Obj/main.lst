C51 COMPILER V9.57.0.0   MAIN                                                              06/21/2024 15:54:18 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Obj\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE User\main.c LARGE OPTIMIZE(1,SPEED) BROWSE INCDIR(.\App;.\User) DEBUG OB
                    -JECTEXTEND PRINT(.\Obj\main.lst) TABS(2) OBJECT(.\Obj\main.obj)

line level    source

   1          #include "main.h"
   2          
   3          
   4          uint8_t idata flag11=0;   //全局标志
   5          
   6          static void SaveSomeData(void);//写入数据
   7          
   8          static uint8_t ReadSomeData(uint16_t );//读出数据
   9          
  10          /* -----------------------------说明 -----------------------------------------
  11          1、 单片机型号 -> STC15L2K32S2   LQFP32
  12          2、 系统时钟   -> 外部晶体，11.0592MHz 
  13          3、 复位       -> 内部上电复位
  14          4、 MyPrintf   -> 映射到串口1，通过USB接口输出调试信息
  15          
  16          5、 定时器0    -> 5ms中断一次，内部定时用
  17          6、 串口1      -> RS-485
  18          6、 串口2      -> WIFI模块
  19          -----------------------------------------------------------------------------*/
  20          int main(void)
  21          {
  22   1        uint8_t main_i=0;
  23   1        uint16_t value=0;
  24   1        
  25   1        Hardware_Init.System_Init();//系统初始化
  26   1        UART1.SendString("Running!\n");
  27   1        
  28   1        EEPROM.EEPROM_EraseSector(EEPROM_Default_Addr);
  29   1        while(true)
  30   1        {
  31   2          EEPROM.EEPROM_WriteByte(EEPROM_Default_Addr,0xAF);
  32   2          EEPROM.EEPROM_WriteByte(EEPROM_Default_Addr+1,0xBF);
  33   2          
  34   2          value=EEPROM.EEPROM_ReadByte(EEPROM_Default_Addr+1);
  35   2          value=(value<<8)+EEPROM.EEPROM_ReadByte(EEPROM_Default_Addr);
  36   2          
  37   2          UART1.RS485_Send_Mode();
  38   2          printf("valuee=%hu\n",value);
  39   2          UART1.RS485_Receive_Mode();
  40   2      
  41   2          Public.Delayms(1000);
  42   2        }
  43   1      
  44   1      }
  45          
  46          //写入数据
  47          static void SaveSomeData()
  48          {
  49   1        EEPROM.ucEEPROM_Cnt=EEPROM_Cnt;//写多少次
  50   1        EEPROM.ucEEPROM_Flag=false;
  51   1        
  52   1        while(EEPROM.ucEEPROM_Cnt--)
  53   1        {
  54   2          EEPROM.EEPROM_EraseSector(EEPROM_Default_Addr);
C51 COMPILER V9.57.0.0   MAIN                                                              06/21/2024 15:54:18 PAGE 2   

  55   2          EEPROM.EEPROM_WriteByte(EEPROM_Default_Addr,254);
  56   2      
  57   2          //读回来看看是否成功
  58   2          if(EEPROM.EEPROM_ReadByte(EEPROM_Default_Addr)==254)
  59   2          {
  60   3            UART1.RS485_Send_Mode();
  61   3            printf("Write Successful,dat=%bu\n",EEPROM.EEPROM_ReadByte(EEPROM_Default_Addr));
  62   3            UART1.RS485_Receive_Mode();
  63   3            EEPROM.ucEEPROM_Flag=true;
  64   3            break;
  65   3          }
  66   2          
  67   2        }
  68   1        
  69   1        if(EEPROM.ucEEPROM_Flag==false)
  70   1        {
  71   2          UART1.RS485_Send_Mode();
  72   2          printf("Write Error,dat=%bu\n",EEPROM.EEPROM_ReadByte(EEPROM_Default_Addr));
  73   2          UART1.RS485_Receive_Mode();
  74   2        }
  75   1      }
  76          
  77          //读出数据
  78          static uint8_t ReadSomeData(uint16_t addr)
  79          {
  80   1        uint8_t dat=0;
  81   1        uint8_t Read_IAP_Para1,Read_IAP_Para2;
  82   1      
  83   1        Read_IAP_Para1=EEPROM.EEPROM_ReadByte(addr);
  84   1        Read_IAP_Para2=EEPROM.EEPROM_ReadByte(addr);
  85   1        if(Read_IAP_Para1==Read_IAP_Para2)
  86   1        {
  87   2          dat=Read_IAP_Para1;
  88   2          
  89   2          UART1.RS485_Send_Mode();
  90   2          printf("dat=%bu\n",dat);
  91   2          UART1.RS485_Receive_Mode();
  92   2        }
  93   1        else
  94   1        {
  95   2          UART1.RS485_Send_Mode();
  96   2          printf("Read Error!Read_IAP_Para1=%bu,Read_IAP_Para1=%bu\n",Read_IAP_Para1,Read_IAP_Para2);
  97   2          UART1.RS485_Receive_Mode();
  98   2        }
  99   1      
 100   1        return dat;
 101   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    746    ----
   CONSTANT SIZE    =    128    ----
   XDATA SIZE       =      8    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =      1    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
