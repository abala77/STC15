C51 COMPILER V9.57.0.0   UART2                                                             06/21/2024 15:54:18 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE UART2
OBJECT MODULE PLACED IN .\Obj\UART2.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE App\UART2.c LARGE OPTIMIZE(1,SPEED) BROWSE INCDIR(.\App;.\User) DEBUG OB
                    -JECTEXTEND PRINT(.\Obj\UART2.lst) TABS(2) OBJECT(.\Obj\UART2.obj)

line level    source

   1          #include "main.h"
   2          
   3          #define Receive_Data_Length 50  //数据接收最大长度
   4          #define Send_Data_Length    50  //数据发送最大长度
   5          #define   S2TI    bit1     //串口2发送中断标志S2CON.1
   6          #define   S2RI    bit0     //串口2接收中断标志S2CON.0
   7          #define   S2TB8   bit3     //校验位发送S2CON.3
   8          #define   S2RB8   bit2     //接受数据校验位S2CON.2
   9          #define   S2REN   bit4     //允许串口2中断S2CON.4
  10          #define   ET2     bit2      //T2中断允许位IE2.2
  11          
  12          static uint8_t xdata UART2_pucRec_Buffer[Receive_Data_Length]={0};
  13          static uint8_t xdata UART2_pucSend_Buffer[Send_Data_Length]={0};
  14          
  15          /*--------------函数声明---------------------*/
  16          static void UART2_Init();
  17          static void SendByte(uint8_t dat);
  18          static void SendString(uint8_t *string);
  19          static void Send_Mode(void);  
  20          static void Receive_Mode(void);
  21          static void Protocol(void); 
  22          static void SendArray(uint8_t *,uint8_t);
  23          
  24          //创建串口1对象
  25          UART_t xdata UART2=
  26          {
  27            None,
  28            Baud_115200,
  29            false,
  30            false,
  31            0,
  32          
  33            UART2_pucSend_Buffer,
  34            UART2_pucRec_Buffer,
  35            
  36            UART2_Init,
  37            SendByte,
  38            SendArray,
  39            SendString,
  40            Protocol,
  41            
  42            TTL,
  43            Send_Mode,
  44            Receive_Mode,
  45          };
  46          
  47          //串口2初始化
  48          static void UART2_Init()
  49          {
  50   1        /*
  51   1        1.T2 固定位16位自动重载模式；
  52   1        2.串口2只能用T2作为波特率发生器；
  53   1        */
  54   1        S2CON=0X50;     //8位数据，可变波特率
C51 COMPILER V9.57.0.0   UART2                                                             06/21/2024 15:54:18 PAGE 2   

  55   1        AUXR |= 0x04;   //定时器时钟1T模式
  56   1        P_SW2 &=0xFE;   //选择P10和P11作为串口2引脚
  57   1        //设置波特率
  58   1        switch(UART1.BaudRate)
  59   1        {
  60   2          case Baud_4800:    T2L = 0xC0;T2H = 0xFD; break;
  61   2          case Baud_9600:    T2L = 0xE0;T2H = 0xFE; break;
  62   2          case Baud_19200:   T2L = 0x70; T2H = 0xFF; break;
  63   2          case Baud_115200:  T2L = 0xE8; T2H = 0xFF; break;
  64   2          default:           T2L = 0xC0; T2H = 0xFD; break;
  65   2        }
  66   1        
  67   1        IE2 &= ~ET2;        //禁止定时器2中断
  68   1        AUXR |= 0x10;       //定时器2开始计时
  69   1        S2CON |= S2REN;     //允许串口2接收
  70   1        
  71   1        //清除缓冲
  72   1        Public.Memory_Clr(UART2.pucRec_Buffer,Receive_Data_Length);
  73   1        UART2.ucRec_Flag=false;
  74   1        UART2.ucRec_Cnt=0;
  75   1      }
  76          
  77          /*
  78            *  @name   SendByte
  79            *  @brief  单个字节数据发送
  80            *  @param  dat:一个字节数据
  81            *  @retval None
  82          */
  83          static void SendByte(uint8_t dat)
  84          {
  85   1        uint8_t temp_P=0;
  86   1        while(UART2.Tx_Busy_Flag==true);//等待前面数据发送完
  87   1        if(UART2.ParityBit!=None)
  88   1        {
  89   2          ACC=dat;//获取校验位P,P=1奇数个1，P=0，偶数个1
  90   2          temp_P=(temp_P+(uint8_t)P)<<3;
  91   2          switch(UART2.ParityBit)
  92   2          {
  93   3            case Odd: 
  94   3              if(temp_P==0)
  95   3              {
  96   4                S2CON |=S2TB8;
  97   4              }
  98   3              else
  99   3              {
 100   4                S2CON &=~S2TB8;
 101   4              }
 102   3              break;
 103   3            case Even: 
 104   3              if(temp_P==0)
 105   3              {
 106   4                
 107   4                S2CON &=~S2TB8;
 108   4              }
 109   3              else
 110   3              {
 111   4                S2CON |=S2TB8;
 112   4              }
 113   3              break;
 114   3          }
 115   2        }
 116   1        
C51 COMPILER V9.57.0.0   UART2                                                             06/21/2024 15:54:18 PAGE 3   

 117   1        UART2.Tx_Busy_Flag=true;
 118   1        S2BUF=dat;
 119   1      }
 120          
 121          //发送字符串
 122          static void SendString(uint8_t *str)
 123          {
 124   1        uint8_t xdata str_ii=0;
 125   1        
 126   1        while(*(str+str_ii))
 127   1        {
 128   2          UART2.SendByte(*(str+str_ii));
 129   2          str_ii++;
 130   2        }
 131   1        while(UART2.Tx_Busy_Flag==true);
 132   1      }
 133          
 134          //发送数组
 135          static void SendArray(uint8_t *array,uint8_t LEN)
 136          {
 137   1        while(LEN--)
 138   1        {
 139   2          UART2.SendByte(*(array++));
 140   2        }
 141   1        while(UART2.Tx_Busy_Flag==true);
 142   1      }
 143          
 144          
 145          
 146          //串口协议
 147          static void Protocol()
 148          {
 149   1        bit Receive_8_Byte=1;//默认接收到了8个字节数据
 150   1        if(UART2.ucRec_Flag==true)
 151   1        {
 152   2          //过滤干扰数据0
 153   2          if(UART2.pucRec_Buffer!=0)
 154   2          {
 155   3            Timer0.usDelay_Timer=0;
 156   3            //等待接收到8个数据
 157   3            while(UART2.ucRec_Cnt<8)
 158   3            {
 159   4              if(Timer0.usDelay_Timer>=TIMER0_100ms)//100ms没接收完8个字节，跳出循环
 160   4              {
 161   5                Receive_8_Byte=0;
 162   5                break;
 163   5              }
 164   4            }
 165   3            if(Receive_8_Byte)
 166   3            {
 167   4              Modbus.Protocol_Analysis(&UART2);//解析协议
 168   4            }
 169   3            else
 170   3            {
 171   4              #if TestPrint
 172   4                UART1.RS485_Send_Mode();
 173   4                printf("Not have 8 Byte！！");
 174   4                UART1.RS485_Receive_Mode();
 175   4              #endif 
 176   4            }
 177   3          }
 178   2          
C51 COMPILER V9.57.0.0   UART2                                                             06/21/2024 15:54:18 PAGE 4   

 179   2          Public.Memory_Clr(UART2.pucRec_Buffer,UART2.ucRec_Cnt);
 180   2          UART2.ucRec_Cnt=0;
 181   2          UART2.ucRec_Flag=false;
 182   2        }
 183   1      }
 184          
 185          //发送模式
 186          static void Send_Mode()
 187          {
 188   1        
 189   1      }
 190          
 191          //接收模式
 192          static void Receive_Mode()
 193          {
 194   1        
 195   1      }
 196          
 197          
 198          /*
 199            *  @name   uart1_isr
 200            *  @brief  串口2中断服务函数
 201            *  @param  None
 202            *  @retval None
 203          */
 204          void uart2_isr() interrupt 8
 205          {
 206   1        //3个缓存变量不能少
 207   1        uint8_t idata temp_SBUF;
 208   1        bit volatile idata temp_RB8;
 209   1        bit volatile idata temp_p;
 210   1        
 211   1        //发送标志
 212   1        if(S2CON & S2TI)
 213   1        {
 214   2          S2CON &= ~S2TI;//清标志
 215   2          UART2.Tx_Busy_Flag=false;
 216   2        }
 217   1        
 218   1        //接收标志
 219   1        if(S2CON & S2RI)
 220   1        {
 221   2          S2CON &= ~S2RI;   //清标志
 222   2          temp_SBUF=S2BUF;  //缓存数据
 223   2          temp_RB8=(bit)((S2CON & S2RB8)>>2);   //校验位
 224   2          
 225   2          //计算校验
 226   2          ACC=temp_SBUF;
 227   2          temp_p=P;
 228   2          
 229   2          if(UART2.ucRec_Cnt<Receive_Data_Length)//还有缓冲位置
 230   2          {
 231   3            switch(UART2.ParityBit)
 232   3            {
 233   4              case Odd:
 234   4                //如果P=1，前面8位的1个数是奇数，那么RB8应该=0
 235   4                if(temp_p==~temp_RB8)
 236   4                {
 237   5                  UART2.pucRec_Buffer[UART2.ucRec_Cnt++]=temp_SBUF;
 238   5                }
 239   4                break;
 240   4              case Even:
C51 COMPILER V9.57.0.0   UART2                                                             06/21/2024 15:54:18 PAGE 5   

 241   4                if(temp_p==temp_RB8)
 242   4                {
 243   5                  UART2.pucRec_Buffer[UART2.ucRec_Cnt++]=temp_SBUF;
 244   5                }
 245   4                break;
 246   4              case None:
 247   4                UART2.pucRec_Buffer[UART2.ucRec_Cnt++]=temp_SBUF;
 248   4                break;
 249   4            }
 250   3          }
 251   2          UART2.ucRec_Flag=true;
 252   2        }
 253   1      }
 254          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    903    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =    143    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =      1    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
